{
  "address": "0x6Ee348a5d180B102860d037AB75B82BA5194FEBC",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "MessageOwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RecoverToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "exsig",
          "type": "address"
        }
      ],
      "name": "SetExsig",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxfee",
          "type": "uint256"
        }
      ],
      "name": "SetMaxfee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxGas",
          "type": "uint256"
        }
      ],
      "name": "SetMaxgas",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "CHAINS",
      "outputs": [
        {
          "internalType": "address",
          "name": "endpoint",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "endpointExtended",
          "type": "bytes"
        },
        {
          "internalType": "uint16",
          "name": "confirmations",
          "type": "uint16"
        },
        {
          "internalType": "bool",
          "name": "extended",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FEE_TOKEN",
      "outputs": [
        {
          "internalType": "contract IERC20cl",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MESSAGE_OWNER",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MESSAGEv3",
      "outputs": [
        {
          "internalType": "contract IMessageV3",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_destChainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "bridge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_messageV3",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_chains",
          "type": "uint256[]"
        },
        {
          "internalType": "address[]",
          "name": "_endpoints",
          "type": "address[]"
        },
        {
          "internalType": "uint16[]",
          "name": "_confirmations",
          "type": "uint16[]"
        }
      ],
      "name": "configureClient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_messageV3",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_chains",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "_endpoints",
          "type": "bytes[]"
        },
        {
          "internalType": "uint16[]",
          "name": "_confirmations",
          "type": "uint16[]"
        }
      ],
      "name": "configureClientExtended",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_sourceChainId",
          "type": "uint256"
        }
      ],
      "name": "isAuthorized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_sourceChainId",
          "type": "uint256"
        }
      ],
      "name": "isSelf",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_sourceChainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "messageProcess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mintNzt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "recoverToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_signer",
          "type": "address"
        }
      ],
      "name": "setExsig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxFee",
          "type": "uint256"
        }
      ],
      "name": "setMaxfee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxGas",
          "type": "uint256"
        }
      ],
      "name": "setMaxgas",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newMessageOwner",
          "type": "address"
        }
      ],
      "name": "transferMessageOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x5f3071bac387b0414e4e9638b61e31ee1eabc2fdcb88fb43c96c4f4a9366158b",
  "receipt": {
    "to": null,
    "from": "0x0fF3EF7199fb0D3229F21b616F69E29F09D92ADa",
    "contractAddress": "0x6Ee348a5d180B102860d037AB75B82BA5194FEBC",
    "transactionIndex": 31,
    "gasUsed": "2058698",
    "logsBloom": "0x
    "blockHash": "0xe1575250ee374aaed4be0182faa6d0c21e25c1e1a6bb630e4d492a9defdf18da",
    "transactionHash": "0x5f3071bac387b0414e4e9638b61e31ee1eabc2fdcb88fb43c96c4f4a9366158b",
    "logs": [
      {
        "transactionIndex": 31,
        "blockNumber": 5629210,
        "transactionHash": "0x5f3071bac387b0414e4e9638b61e31ee1eabc2fdcb88fb43c96c4f4a9366158b",
        "address": "0x6Ee348a5d180B102860d037AB75B82BA5194FEBC",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000ff3ef7199fb0d3229f21b616f69e29f09d92ada"
        ],
        "data": "0x00000000000000000000000000000000000000000000d3c21bcecceda1000000",
        "logIndex": 41,
        "blockHash": "0xe1575250ee374aaed4be0182faa6d0c21e25c1e1a6bb630e4d492a9defdf18da"
      }
    ],
    "blockNumber": 5629210,
    "cumulativeGasUsed": "6694229",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "cad5f4ccc43f7a2dc99022ac5297494b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"MessageOwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RecoverToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"exsig\",\"type\":\"address\"}],\"name\":\"SetExsig\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxfee\",\"type\":\"uint256\"}],\"name\":\"SetMaxfee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxGas\",\"type\":\"uint256\"}],\"name\":\"SetMaxgas\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"CHAINS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"endpoint\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"endpointExtended\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"confirmations\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"extended\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FEE_TOKEN\",\"outputs\":[{\"internalType\":\"contract IERC20cl\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MESSAGE_OWNER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MESSAGEv3\",\"outputs\":[{\"internalType\":\"contract IMessageV3\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_destChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"bridge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_messageV3\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_chains\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"_endpoints\",\"type\":\"address[]\"},{\"internalType\":\"uint16[]\",\"name\":\"_confirmations\",\"type\":\"uint16[]\"}],\"name\":\"configureClient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_messageV3\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_chains\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"_endpoints\",\"type\":\"bytes[]\"},{\"internalType\":\"uint16[]\",\"name\":\"_confirmations\",\"type\":\"uint16[]\"}],\"name\":\"configureClientExtended\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sourceChainId\",\"type\":\"uint256\"}],\"name\":\"isAuthorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sourceChainId\",\"type\":\"uint256\"}],\"name\":\"isSelf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sourceChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"messageProcess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mintNzt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"recoverToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"}],\"name\":\"setExsig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxFee\",\"type\":\"uint256\"}],\"name\":\"setMaxfee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxGas\",\"type\":\"uint256\"}],\"name\":\"setMaxgas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newMessageOwner\",\"type\":\"address\"}],\"name\":\"transferMessageOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"configureClientExtended(address,uint256[],bytes[],uint16[])\":{\"notice\":\"OWNER \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NexisBridge.sol\":\"NexisBridge\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@cryptolink/contracts/message/IERC20cl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// (c)2021-2023 Atlas\\n// security-contact: atlas@cryptolink.tech\\npragma solidity ^0.8.9;\\n\\ninterface IERC20cl {\\n    event Approval(address indexed owner, address indexed spender, uint value);\\n    event Transfer(address indexed from, address indexed to, uint value);\\n\\n    function name() external view returns (string memory);\\n    function symbol() external view returns (string memory);\\n    function decimals() external view returns (uint8);\\n    function totalSupply() external view returns (uint);\\n    function balanceOf(address owner) external view returns (uint);\\n    function allowance(address owner, address spender) external view returns (uint);\\n\\n    function approve(address spender, uint value) external returns (bool);\\n    function transfer(address to, uint value) external returns (bool);\\n    function transferFrom(address from, address to, uint value) external returns (bool);\\n}\\n\",\"keccak256\":\"0x298e737914423e742328378a91299dbde52ed768b3f8998a85e65423326abfe9\",\"license\":\"MIT\"},\"@cryptolink/contracts/message/IMessageV3.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// (c)2021-2023 Atlas\\n// security-contact: atlas@cryptolink.tech\\npragma solidity ^0.8.9;\\n\\ninterface IMessageV3 {\\n    event SendRequested(uint txId, address sender, address recipient, uint chain, bool express, bytes data, uint16 confirmations);\\n    event SendProcessed(uint txId, uint sourceChainId, address sender, address recipient);\\n    event Success(uint txId, uint sourceChainId, address sender, address recipient, uint amount);\\n    event ErrorLog(uint txId, string message);\\n    event SetExsig(address caller, address signer);\\n    event SetMaxgas(address caller, uint maxGas);\\n    event SetMaxfee(address caller, uint maxFee);\\n\\n    function chainsig() external view returns (address signer);\\n    function weth() external view returns (address wethTokenAddress);\\n    function feeToken() external view returns (address feeToken);\\n    function feeTokenDecimals() external view returns (uint feeTokenDecimals);\\n    function minFee() external view returns (uint minFee);\\n    function bridgeEnabled() external view returns (bool bridgeEnabled);\\n    function takeFeesOffline() external view returns (bool takeFeesOffline);\\n    function whitelistOnly() external view returns (bool whitelistOnly);\\n\\n    function enabledChains(uint destChainId) external view returns (bool enabled);\\n    function customSourceFee(address caller) external view returns (uint customSourceFee);\\n    function maxgas(address caller) external view returns (uint maxgas);\\n    function exsig(address caller) external view returns (address signer);\\n\\n    // @dev backwards compat with BridgeClient\\n    function minTokenForChain(uint chainId) external returns (uint amount);\\n\\n    function sendMessage(address recipient, uint chain, bytes calldata data, uint16 confirmations, bool express) external returns (uint txId);\\n    // @dev backwards compat with BridgeClient\\n    function sendRequest(address recipient, uint chainId, uint amount, address referrer, bytes calldata data, uint16 confirmations) external returns (uint txId);\\n\\n    function setExsig(address signer) external;\\n    function setMaxgas(uint maxgas) external;\\n    function setMaxfee(uint maxfee) external;\\n\\n    function getSourceFee(uint _destChainId, bool _express) external view returns (uint _fee);\\n}\",\"keccak256\":\"0x3b4832a9d102029986f4dd1a7e94bb9a6ffec7d5fa3b28f42f6d2e63b300ab31\",\"license\":\"MIT\"},\"@cryptolink/contracts/message/MessageClient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// (c)2021-2024 Atlas\\n// security-contact: atlas@cryptolink.tech\\npragma solidity ^0.8.9;\\n\\nimport \\\"./IMessageV3.sol\\\";\\nimport \\\"./IERC20cl.sol\\\";\\n\\n/**\\n * @title MessageV3 Client\\n * @author CryptoLink.Tech <atlas@cryptolink.tech>\\n */\\nabstract contract MessageClient {\\n    IMessageV3 public MESSAGEv3;\\n    IERC20cl public FEE_TOKEN;\\n\\n    struct ChainData {\\n        address endpoint; // address of this contract on specified chain\\n        bytes endpointExtended; // address of this contract on non EVM\\n        uint16 confirmations; // source confirmations\\n        bool extended; // are we using extended endpoint? (addresses larger than uint256)\\n    }\\n    mapping(uint => ChainData) public CHAINS;\\n    address public MESSAGE_OWNER;\\n\\n    modifier onlySelf(address _sender, uint _sourceChainId) {\\n        require(msg.sender == address(MESSAGEv3), \\\"MessageClient: not authorized\\\");\\n        require(_sender == CHAINS[_sourceChainId].endpoint, \\\"MessageClient: not authorized\\\");\\n        _;\\n    }\\n\\n    modifier onlyActiveChain(uint _destinationChainId) {\\n        require(CHAINS[_destinationChainId].endpoint != address(0), \\\"MessageClient: destination chain not active\\\");\\n        _;\\n    }\\n\\n    modifier onlyMessageOwner() {\\n        require(msg.sender == MESSAGE_OWNER, \\\"MessageClient: not authorized\\\");\\n        _;\\n    }\\n\\n    event MessageOwnershipTransferred(address previousOwner, address newOwner);\\n    event RecoverToken(address owner, address token, uint amount);\\n    event SetMaxgas(address owner, uint maxGas);\\n    event SetMaxfee(address owner, uint maxfee);\\n    event SetExsig(address owner, address exsig);\\n\\n    constructor() {\\n        MESSAGE_OWNER = msg.sender;\\n    }\\n\\n    function transferMessageOwnership(address _newMessageOwner) external onlyMessageOwner {\\n        MESSAGE_OWNER = _newMessageOwner;\\n        emit MessageOwnershipTransferred(msg.sender, _newMessageOwner);\\n    }\\n\\n    /** BRIDGE RECEIVER */\\n    function messageProcess(\\n        uint _txId,          // transaction id\\n        uint _sourceChainId, // source chain id\\n        address _sender,     // corresponding MessageClient address on source chain\\n        address _reference,  // (optional source reference address)\\n        uint _amount,        // (not used for messages, always 0)\\n        bytes calldata _data // encoded message from source chain\\n    ) external virtual onlySelf (_sender, _sourceChainId) {\\n    }\\n\\n    /** BRIDGE SENDER */\\n    function _sendMessage(uint _destinationChainId, bytes memory _data) internal returns (uint _txId) {\\n        ChainData memory _chain = CHAINS[_destinationChainId];\\n        if(_chain.extended) { // non-evm addresses larger than uint256\\n            _data = abi.encode(_data, _chain.endpointExtended);\\n        }\\n        return IMessageV3(MESSAGEv3).sendMessage(\\n            _chain.endpoint,      // corresponding MessageClient contract address on destination chain\\n            _destinationChainId,  // id of the destination chain\\n            _data,                // arbitrary data package to send\\n            _chain.confirmations, // amount of required transaction confirmations\\n            false                 // send express mode on destination\\n        );\\n    }\\n\\n    function _sendMessageExpress(uint _destinationChainId, bytes memory _data) internal returns (uint _txId) {\\n        ChainData memory _chain = CHAINS[_destinationChainId];\\n        if(_chain.extended) { // non-evm addresses larger than uint256\\n            _data = abi.encode(_data, _chain.endpointExtended);\\n        }\\n        return IMessageV3(MESSAGEv3).sendMessage(\\n            _chain.endpoint,      // corresponding MessageV3Client contract address on destination chain\\n            _destinationChainId,  // id of the destination chain\\n            _data,                // arbitrary data package to send\\n            _chain.confirmations, // amount of required transaction confirmations\\n            true                  // send express mode on destination\\n        );\\n    }\\n\\n    /** OWNER */\\n    function configureClientExtended(\\n        address _messageV3, // MessageV3 bridge address\\n        uint[] calldata _chains, // list of chains to accept as valid destinations\\n        bytes[] calldata _endpoints, // list of corresponding MessageV3Client addresses on each chain\\n        uint16[] calldata _confirmations // confirmations required on each chain before processing\\n    ) external onlyMessageOwner {\\n        uint _chainsLength = _chains.length;\\n        for(uint x=0; x < _chainsLength; x++) {\\n            CHAINS[_chains[x]].confirmations = _confirmations[x];\\n            CHAINS[_chains[x]].endpointExtended = _endpoints[x];\\n            CHAINS[_chains[x]].extended = true;\\n            CHAINS[_chains[x]].endpoint = address(1);\\n        }\\n\\n        _configureMessageV3(_messageV3);\\n    }\\n\\n    function configureClient(\\n        address _messageV3, // MessageV3 bridge address\\n        uint[] calldata _chains, // list of chains to accept as valid destinations\\n        address[] calldata _endpoints, // list of corresponding MessageV3Client addresses on each chain\\n        uint16[] calldata _confirmations // confirmations required on each chain before processing\\n    ) public onlyMessageOwner {\\n        uint _chainsLength = _chains.length;\\n        for(uint x=0; x < _chainsLength; x++) {\\n            CHAINS[_chains[x]].confirmations = _confirmations[x];\\n            CHAINS[_chains[x]].endpoint = _endpoints[x];\\n            CHAINS[_chains[x]].extended = false;\\n        }\\n\\n        _configureMessageV3(_messageV3);\\n    }\\n\\n    function _configureMessageV3(address _messageV3) internal {\\n        MESSAGEv3 = IMessageV3(_messageV3);\\n        FEE_TOKEN = IERC20cl(MESSAGEv3.feeToken());\\n\\n        // approve bridge for source chain fees (limited per transaction with setMaxfee)\\n        if(address(FEE_TOKEN) != address(0)) {\\n            FEE_TOKEN.approve(address(MESSAGEv3), type(uint).max);\\n        }\\n\\n        // approve bridge for destination gas fees (limited per transaction with setMaxgas)\\n        if(address(MESSAGEv3.weth()) != address(0)) {\\n            IERC20cl(MESSAGEv3.weth()).approve(address(MESSAGEv3), type(uint).max);\\n        }\\n    }\\n\\n    function setExsig(address _signer) external onlyMessageOwner {\\n        MESSAGEv3.setExsig(_signer);\\n        emit SetExsig(msg.sender, _signer);\\n    }\\n\\n    function setMaxgas(uint _maxGas) external onlyMessageOwner {\\n        MESSAGEv3.setMaxgas(_maxGas);\\n        emit SetMaxgas(msg.sender, _maxGas);\\n    }\\n\\n    function setMaxfee(uint _maxFee) external onlyMessageOwner {\\n        MESSAGEv3.setMaxfee(_maxFee);\\n        emit SetMaxfee(msg.sender, _maxFee);\\n    }\\n\\n    function recoverToken(address _token, uint _amount) external onlyMessageOwner {\\n        if(_token == address(0)) {\\n            payable(msg.sender).transfer(_amount);\\n        } else {\\n            IERC20cl(_token).transfer(msg.sender, _amount);\\n        }\\n        emit RecoverToken(msg.sender, _token, _amount);\\n    }\\n\\n    function isSelf(address _sender, uint _sourceChainId) public view returns (bool) {\\n        if(_sender == CHAINS[_sourceChainId].endpoint) return true;\\n        return false;\\n    }\\n\\n    function isAuthorized(address _sender, uint _sourceChainId) external view returns (bool) {\\n        return isSelf(_sender, _sourceChainId);\\n    }\\n\\n    receive() external payable {}\\n    fallback() external payable {}\\n}\",\"keccak256\":\"0xef16e5d20b0a30cfd6d74fee3c86a69c54f9c485a7e494a5c721fe4c27fcd097\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC20.sol\\\";\\nimport \\\"../../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\\n * tokens and those that they have an allowance for, in a way that can be\\n * recognized off-chain (via event analysis).\\n */\\nabstract contract ERC20Burnable is Context, ERC20 {\\n    /**\\n     * @dev Destroys `amount` tokens from the caller.\\n     *\\n     * See {ERC20-_burn}.\\n     */\\n    function burn(uint256 amount) public virtual {\\n        _burn(_msgSender(), amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\\n     * allowance.\\n     *\\n     * See {ERC20-_burn} and {ERC20-allowance}.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have allowance for ``accounts``'s tokens of at least\\n     * `amount`.\\n     */\\n    function burnFrom(address account, uint256 amount) public virtual {\\n        _spendAllowance(account, _msgSender(), amount);\\n        _burn(account, amount);\\n    }\\n}\\n\",\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"},\"contracts/NexisBridge.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// (c)2024 Atlas (atlas@cryptolink.tech)\\npragma solidity =0.8.17;\\n\\nimport \\\"@cryptolink/contracts/message/MessageClient.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\\\";\\n\\ncontract NexisBridge is ERC20Burnable, MessageClient {\\n    address public owner;\\n\\n    constructor() ERC20(\\\"Nexis\\\", \\\"NZT\\\") {\\n        _mint(msg.sender, 1_000_000 ether);\\n        owner = msg.sender;\\n    }\\n\\n    function bridge(uint _destChainId, address _recipient, uint _amount) external onlyActiveChain(_destChainId) {\\n        // burn tokens\\n        _burn(msg.sender, _amount);\\n\\n        // send cross chain message\\n        _sendMessage(_destChainId, abi.encode(_recipient, _amount));\\n    }\\n\\n    function messageProcess(uint, uint _sourceChainId, address _sender, address, uint, bytes calldata _data) external override  onlySelf(_sender, _sourceChainId)  {\\n        // decode message\\n        (address _recipient, uint _amount) = abi.decode(_data, (address, uint));\\n\\n        // mint tokens\\n        _mint(_recipient, _amount);\\n    }\\n\\n    function mintNzt(address _recipient, uint _amount) public{\\n        // check if request if from owner\\n        require(msg.sender==owner,\\\"not owner\\\");\\n        // mint tokens\\n        _mint(_recipient, _amount);\\n    }\\n}\",\"keccak256\":\"0x77869bb949c35c3eeb22d1bef957f8e5bf75687b330f76d8d96bb4aebf746f0a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051806040016040528060058152602001644e6578697360d81b8152506040518060400160405280600381526020016213969560ea1b81525081600390816200005d919062000221565b5060046200006c828262000221565b5050600880546001600160a01b031916339081179091556200009a915069d3c21bcecceda1000000620000b2565b600980546001600160a01b0319163317905562000315565b6001600160a01b0382166200010d5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620001219190620002ed565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620001a857607f821691505b602082108103620001c957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200017857600081815260208120601f850160051c81016020861015620001f85750805b601f850160051c820191505b81811015620002195782815560010162000204565b505050505050565b81516001600160401b038111156200023d576200023d6200017d565b62000255816200024e845462000193565b84620001cf565b602080601f8311600181146200028d5760008415620002745750858301515b600019600386901b1c1916600185901b17855562000219565b600085815260208120601f198616915b82811015620002be578886015182559484019460019091019084016200029d565b5085821015620002dd5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200030f57634e487b7160e01b600052601160045260246000fd5b92915050565b61219b80620003256000396000f3fe6080604052600436106101b95760003560e01c806370a08231116100eb578063a457c2d71161008f578063b7f494a411610061578063b7f494a41461054b578063c60853f61461056b578063dd62ed3e1461058b578063e47ad74d146105ab57005b8063a457c2d7146104cb578063a9059cbb146104eb578063b29a81401461050b578063b479a9611461052b57005b8063853c75d8116100c8578063853c75d8146104465780638da5cb5b1461046657806392ae12fd1461048657806395d89b41146104b657005b806370a08231146103d057806373717b081461040657806379cc67901461042657005b80632972b0f01161015d578063395093511161012f578063395093511461035057806342966c6814610370578063559b2f65146103905780635f46e740146103b057005b80632972b0f0146102d45780632ee02d7c146102f45780632f820a5f14610314578063313ce5671461033457005b806318160ddd1161019657806318160ddd1461025557806320bfe34214610274578063221a6e1d1461029457806323b872dd146102b457005b806306fdde03146101c2578063095ea7b3146101ed5780630d0298021461021d57005b366101c057005b005b3480156101ce57600080fd5b506101d76105cb565b6040516101e49190611b2a565b60405180910390f35b3480156101f957600080fd5b5061020d610208366004611b52565b61065d565b60405190151581526020016101e4565b34801561022957600080fd5b5060055461023d906001600160a01b031681565b6040516001600160a01b0390911681526020016101e4565b34801561026157600080fd5b506002545b6040519081526020016101e4565b34801561028057600080fd5b5061020d61028f366004611b52565b610677565b3480156102a057600080fd5b506101c06102af366004611b52565b6106aa565b3480156102c057600080fd5b5061020d6102cf366004611b7e565b610703565b3480156102e057600080fd5b5061020d6102ef366004611b52565b610727565b34801561030057600080fd5b506101c061030f366004611c0b565b61073a565b34801561032057600080fd5b506101c061032f366004611cb8565b6108c6565b34801561034057600080fd5b50604051601281526020016101e4565b34801561035c57600080fd5b5061020d61036b366004611b52565b610987565b34801561037c57600080fd5b506101c061038b366004611cdf565b6109a9565b34801561039c57600080fd5b506101c06103ab366004611cf8565b6109b6565b3480156103bc57600080fd5b506101c06103cb366004611d15565b610a3c565b3480156103dc57600080fd5b506102666103eb366004611cf8565b6001600160a01b031660009081526020819052604090205490565b34801561041257600080fd5b5060065461023d906001600160a01b031681565b34801561043257600080fd5b506101c0610441366004611b52565b610acd565b34801561045257600080fd5b5060085461023d906001600160a01b031681565b34801561047257600080fd5b5060095461023d906001600160a01b031681565b34801561049257600080fd5b506104a66104a1366004611cdf565b610ae2565b6040516101e49493929190611dca565b3480156104c257600080fd5b506101d7610ba7565b3480156104d757600080fd5b5061020d6104e6366004611b52565b610bb6565b3480156104f757600080fd5b5061020d610506366004611b52565b610c31565b34801561051757600080fd5b506101c0610526366004611b52565b610c3f565b34801561053757600080fd5b506101c0610546366004611cdf565b610d6a565b34801561055757600080fd5b506101c0610566366004611c0b565b610e29565b34801561057757600080fd5b506101c0610586366004611cf8565b610fdc565b34801561059757600080fd5b506102666105a6366004611e0a565b6110a4565b3480156105b757600080fd5b506101c06105c6366004611cdf565b6110cf565b6060600380546105da90611e43565b80601f016020809104026020016040519081016040528092919081815260200182805461060690611e43565b80156106535780601f1061062857610100808354040283529160200191610653565b820191906000526020600020905b81548152906001019060200180831161063657829003601f168201915b5050505050905090565b60003361066b81858561118e565b60019150505b92915050565b6000818152600760205260408120546001600160a01b03908116908416036106a157506001610671565b50600092915050565b6009546001600160a01b031633146106f55760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b60448201526064015b60405180910390fd5b6106ff82826112b3565b5050565b600033610711858285611372565b61071c8585856113ec565b506001949350505050565b60006107338383610677565b9392505050565b6008546001600160a01b031633146107645760405162461bcd60e51b81526004016106ec90611e7d565b8460005b818110156108b25783838281811061078257610782611eb4565b90506020020160208101906107979190611eca565b600760008a8a858181106107ad576107ad611eb4565b90506020020135815260200190815260200160002060020160006101000a81548161ffff021916908361ffff1602179055508585828181106107f1576107f1611eb4565b90506020020160208101906108069190611cf8565b600760008a8a8581811061081c5761081c611eb4565b90506020020135815260200190815260200160002060000160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506000600760008a8a8581811061087057610870611eb4565b90506020020135815260200190815260200160002060020160026101000a81548160ff02191690831515021790555080806108aa90611f04565b915050610768565b506108bc88611590565b5050505050505050565b60008381526007602052604090205483906001600160a01b03166109405760405162461bcd60e51b815260206004820152602b60248201527f4d657373616765436c69656e743a2064657374696e6174696f6e20636861696e60448201526a206e6f742061637469766560a81b60648201526084016106ec565b61094a3383611817565b604080516001600160a01b0385166020820152908101839052610980908590606001604051602081830303815290604052611946565b5050505050565b60003361066b81858561099a83836110a4565b6109a49190611f1d565b61118e565b6109b33382611817565b50565b6008546001600160a01b031633146109e05760405162461bcd60e51b81526004016106ec90611e7d565b600880546001600160a01b0319166001600160a01b0383169081179091556040805133815260208101929092527fe1a25f463c6504824e91268b5b2c05658d5358c9c1698a85346cfae5336a642e91015b60405180910390a150565b600554859087906001600160a01b03163314610a6a5760405162461bcd60e51b81526004016106ec90611e7d565b6000818152600760205260409020546001600160a01b03838116911614610aa35760405162461bcd60e51b81526004016106ec90611e7d565b600080610ab285870187611b52565b91509150610ac082826112b3565b5050505050505050505050565b610ad8823383611372565b6106ff8282611817565b600760205260009081526040902080546001820180546001600160a01b039092169291610b0e90611e43565b80601f0160208091040260200160405190810160405280929190818152602001828054610b3a90611e43565b8015610b875780601f10610b5c57610100808354040283529160200191610b87565b820191906000526020600020905b815481529060010190602001808311610b6a57829003601f168201915b5050506002909301549192505061ffff81169060ff620100009091041684565b6060600480546105da90611e43565b60003381610bc482866110a4565b905083811015610c245760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106ec565b61071c828686840361118e565b60003361066b8185856113ec565b6008546001600160a01b03163314610c695760405162461bcd60e51b81526004016106ec90611e7d565b6001600160a01b038216610caa57604051339082156108fc029083906000818181858888f19350505050158015610ca4573d6000803e3d6000fd5b50610d1d565b60405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0383169063a9059cbb906044016020604051808303816000875af1158015610cf7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1b9190611f30565b505b604080513381526001600160a01b03841660208201529081018290527f16a1412f01b73c390eb2548427101644aa86c1443c272f73df00fb74c48fe4999060600160405180910390a15050565b6008546001600160a01b03163314610d945760405162461bcd60e51b81526004016106ec90611e7d565b60055460405163b479a96160e01b8152600481018390526001600160a01b039091169063b479a96190602401600060405180830381600087803b158015610dda57600080fd5b505af1158015610dee573d6000803e3d6000fd5b505060408051338152602081018590527f7b6bdf5a54b984bdb41e777eb126123085d57633ab56d408d9a1d39dd894e7bb9350019050610a31565b6008546001600160a01b03163314610e535760405162461bcd60e51b81526004016106ec90611e7d565b8460005b818110156108b257838382818110610e7157610e71611eb4565b9050602002016020810190610e869190611eca565b600760008a8a85818110610e9c57610e9c611eb4565b90506020020135815260200190815260200160002060020160006101000a81548161ffff021916908361ffff160217905550858582818110610ee057610ee0611eb4565b9050602002810190610ef29190611f52565b600760008b8b86818110610f0857610f08611eb4565b9050602002013581526020019081526020016000206001019182610f2d929190611ffd565b506001600760008a8a85818110610f4657610f46611eb4565b90506020020135815260200190815260200160002060020160026101000a81548160ff0219169083151502179055506001600760008a8a85818110610f8d57610f8d611eb4565b90506020020135815260200190815260200160002060000160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508080610fd490611f04565b915050610e57565b6008546001600160a01b031633146110065760405162461bcd60e51b81526004016106ec90611e7d565b60055460405163630429fb60e11b81526001600160a01b0383811660048301529091169063c60853f690602401600060405180830381600087803b15801561104d57600080fd5b505af1158015611061573d6000803e3d6000fd5b5050604080513381526001600160a01b03851660208201527f3785abad972484d82ebc033d8eb190737cd209b24e7f853dd622e415c3f537a29350019050610a31565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6008546001600160a01b031633146110f95760405162461bcd60e51b81526004016106ec90611e7d565b60055460405163e47ad74d60e01b8152600481018390526001600160a01b039091169063e47ad74d90602401600060405180830381600087803b15801561113f57600080fd5b505af1158015611153573d6000803e3d6000fd5b505060408051338152602081018590527f83f76efc0c025b2e3779f7bcead5a89ddaf05dc7829157cdab021a8591e7a6f99350019050610a31565b6001600160a01b0383166111f05760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106ec565b6001600160a01b0382166112515760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106ec565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0382166113095760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106ec565b806002600082825461131b9190611f1d565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600061137e84846110a4565b905060001981146113e657818110156113d95760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106ec565b6113e6848484840361118e565b50505050565b6001600160a01b0383166114505760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106ec565b6001600160a01b0382166114b25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106ec565b6001600160a01b0383166000908152602081905260409020548181101561152a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106ec565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36113e6565b600580546001600160a01b0319166001600160a01b0383169081179091556040805163647846a560e01b8152905163647846a5916004808201926020929091908290030181865afa1580156115e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061160d91906120bd565b600680546001600160a01b0319166001600160a01b03929092169182179055156116ad5760065460055460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015611687573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ab9190611f30565b505b60055460408051633fc8cef360e01b815290516000926001600160a01b031691633fc8cef39160048083019260209291908290030181865afa1580156116f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171b91906120bd565b6001600160a01b0316146109b357600560009054906101000a90046001600160a01b03166001600160a01b0316633fc8cef36040518163ffffffff1660e01b8152600401602060405180830381865afa15801561177c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117a091906120bd565b60055460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af11580156117f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ff9190611f30565b6001600160a01b0382166118775760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016106ec565b6001600160a01b038216600090815260208190526040902054818110156118eb5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016106ec565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016112a6565b505050565b600082815260076020908152604080832081516080810190925280546001600160a01b0316825260018101805485948401919061198290611e43565b80601f01602080910402602001604051908101604052809291908181526020018280546119ae90611e43565b80156119fb5780601f106119d0576101008083540402835291602001916119fb565b820191906000526020600020905b8154815290600101906020018083116119de57829003601f168201915b50505091835250506002919091015461ffff8116602083015262010000900460ff161515604090910152606081015190915015611a5b57828160200151604051602001611a499291906120da565b60405160208183030381529060405292505b60055481516040808401519051633f6b724360e21b81526001600160a01b039093169263fdadc90c92611a9992909189918991600090600401612108565b6020604051808303816000875af1158015611ab8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611adc919061214c565b949350505050565b6000815180845260005b81811015611b0a57602081850181015186830182015201611aee565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006107336020830184611ae4565b6001600160a01b03811681146109b357600080fd5b60008060408385031215611b6557600080fd5b8235611b7081611b3d565b946020939093013593505050565b600080600060608486031215611b9357600080fd5b8335611b9e81611b3d565b92506020840135611bae81611b3d565b929592945050506040919091013590565b60008083601f840112611bd157600080fd5b50813567ffffffffffffffff811115611be957600080fd5b6020830191508360208260051b8501011115611c0457600080fd5b9250929050565b60008060008060008060006080888a031215611c2657600080fd5b8735611c3181611b3d565b9650602088013567ffffffffffffffff80821115611c4e57600080fd5b611c5a8b838c01611bbf565b909850965060408a0135915080821115611c7357600080fd5b611c7f8b838c01611bbf565b909650945060608a0135915080821115611c9857600080fd5b50611ca58a828b01611bbf565b989b979a50959850939692959293505050565b600080600060608486031215611ccd57600080fd5b833592506020840135611bae81611b3d565b600060208284031215611cf157600080fd5b5035919050565b600060208284031215611d0a57600080fd5b813561073381611b3d565b600080600080600080600060c0888a031215611d3057600080fd5b87359650602088013595506040880135611d4981611b3d565b94506060880135611d5981611b3d565b93506080880135925060a088013567ffffffffffffffff80821115611d7d57600080fd5b818a0191508a601f830112611d9157600080fd5b813581811115611da057600080fd5b8b6020828501011115611db257600080fd5b60208301945080935050505092959891949750929550565b6001600160a01b0385168152608060208201819052600090611dee90830186611ae4565b61ffff9490941660408301525090151560609091015292915050565b60008060408385031215611e1d57600080fd5b8235611e2881611b3d565b91506020830135611e3881611b3d565b809150509250929050565b600181811c90821680611e5757607f821691505b602082108103611e7757634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252601d908201527f4d657373616765436c69656e743a206e6f7420617574686f72697a6564000000604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611edc57600080fd5b813561ffff8116811461073357600080fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611f1657611f16611eee565b5060010190565b8082018082111561067157610671611eee565b600060208284031215611f4257600080fd5b8151801515811461073357600080fd5b6000808335601e19843603018112611f6957600080fd5b83018035915067ffffffffffffffff821115611f8457600080fd5b602001915036819003821315611c0457600080fd5b634e487b7160e01b600052604160045260246000fd5b601f82111561194157600081815260208120601f850160051c81016020861015611fd65750805b601f850160051c820191505b81811015611ff557828155600101611fe2565b505050505050565b67ffffffffffffffff83111561201557612015611f99565b612029836120238354611e43565b83611faf565b6000601f84116001811461205d57600085156120455750838201355b600019600387901b1c1916600186901b178355610980565b600083815260209020601f19861690835b8281101561208e578685013582556020948501946001909201910161206e565b50868210156120ab5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b6000602082840312156120cf57600080fd5b815161073381611b3d565b6040815260006120ed6040830185611ae4565b82810360208401526120ff8185611ae4565b95945050505050565b60018060a01b038616815284602082015260a06040820152600061212f60a0830186611ae4565b61ffff949094166060830152509015156080909101529392505050565b60006020828403121561215e57600080fd5b505191905056fea2646970667358221220393692e283cf4d9870f5d98e5cef28e47c094816f703c1b75b74792227252a3a64736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106101b95760003560e01c806370a08231116100eb578063a457c2d71161008f578063b7f494a411610061578063b7f494a41461054b578063c60853f61461056b578063dd62ed3e1461058b578063e47ad74d146105ab57005b8063a457c2d7146104cb578063a9059cbb146104eb578063b29a81401461050b578063b479a9611461052b57005b8063853c75d8116100c8578063853c75d8146104465780638da5cb5b1461046657806392ae12fd1461048657806395d89b41146104b657005b806370a08231146103d057806373717b081461040657806379cc67901461042657005b80632972b0f01161015d578063395093511161012f578063395093511461035057806342966c6814610370578063559b2f65146103905780635f46e740146103b057005b80632972b0f0146102d45780632ee02d7c146102f45780632f820a5f14610314578063313ce5671461033457005b806318160ddd1161019657806318160ddd1461025557806320bfe34214610274578063221a6e1d1461029457806323b872dd146102b457005b806306fdde03146101c2578063095ea7b3146101ed5780630d0298021461021d57005b366101c057005b005b3480156101ce57600080fd5b506101d76105cb565b6040516101e49190611b2a565b60405180910390f35b3480156101f957600080fd5b5061020d610208366004611b52565b61065d565b60405190151581526020016101e4565b34801561022957600080fd5b5060055461023d906001600160a01b031681565b6040516001600160a01b0390911681526020016101e4565b34801561026157600080fd5b506002545b6040519081526020016101e4565b34801561028057600080fd5b5061020d61028f366004611b52565b610677565b3480156102a057600080fd5b506101c06102af366004611b52565b6106aa565b3480156102c057600080fd5b5061020d6102cf366004611b7e565b610703565b3480156102e057600080fd5b5061020d6102ef366004611b52565b610727565b34801561030057600080fd5b506101c061030f366004611c0b565b61073a565b34801561032057600080fd5b506101c061032f366004611cb8565b6108c6565b34801561034057600080fd5b50604051601281526020016101e4565b34801561035c57600080fd5b5061020d61036b366004611b52565b610987565b34801561037c57600080fd5b506101c061038b366004611cdf565b6109a9565b34801561039c57600080fd5b506101c06103ab366004611cf8565b6109b6565b3480156103bc57600080fd5b506101c06103cb366004611d15565b610a3c565b3480156103dc57600080fd5b506102666103eb366004611cf8565b6001600160a01b031660009081526020819052604090205490565b34801561041257600080fd5b5060065461023d906001600160a01b031681565b34801561043257600080fd5b506101c0610441366004611b52565b610acd565b34801561045257600080fd5b5060085461023d906001600160a01b031681565b34801561047257600080fd5b5060095461023d906001600160a01b031681565b34801561049257600080fd5b506104a66104a1366004611cdf565b610ae2565b6040516101e49493929190611dca565b3480156104c257600080fd5b506101d7610ba7565b3480156104d757600080fd5b5061020d6104e6366004611b52565b610bb6565b3480156104f757600080fd5b5061020d610506366004611b52565b610c31565b34801561051757600080fd5b506101c0610526366004611b52565b610c3f565b34801561053757600080fd5b506101c0610546366004611cdf565b610d6a565b34801561055757600080fd5b506101c0610566366004611c0b565b610e29565b34801561057757600080fd5b506101c0610586366004611cf8565b610fdc565b34801561059757600080fd5b506102666105a6366004611e0a565b6110a4565b3480156105b757600080fd5b506101c06105c6366004611cdf565b6110cf565b6060600380546105da90611e43565b80601f016020809104026020016040519081016040528092919081815260200182805461060690611e43565b80156106535780601f1061062857610100808354040283529160200191610653565b820191906000526020600020905b81548152906001019060200180831161063657829003601f168201915b5050505050905090565b60003361066b81858561118e565b60019150505b92915050565b6000818152600760205260408120546001600160a01b03908116908416036106a157506001610671565b50600092915050565b6009546001600160a01b031633146106f55760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b60448201526064015b60405180910390fd5b6106ff82826112b3565b5050565b600033610711858285611372565b61071c8585856113ec565b506001949350505050565b60006107338383610677565b9392505050565b6008546001600160a01b031633146107645760405162461bcd60e51b81526004016106ec90611e7d565b8460005b818110156108b25783838281811061078257610782611eb4565b90506020020160208101906107979190611eca565b600760008a8a858181106107ad576107ad611eb4565b90506020020135815260200190815260200160002060020160006101000a81548161ffff021916908361ffff1602179055508585828181106107f1576107f1611eb4565b90506020020160208101906108069190611cf8565b600760008a8a8581811061081c5761081c611eb4565b90506020020135815260200190815260200160002060000160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506000600760008a8a8581811061087057610870611eb4565b90506020020135815260200190815260200160002060020160026101000a81548160ff02191690831515021790555080806108aa90611f04565b915050610768565b506108bc88611590565b5050505050505050565b60008381526007602052604090205483906001600160a01b03166109405760405162461bcd60e51b815260206004820152602b60248201527f4d657373616765436c69656e743a2064657374696e6174696f6e20636861696e60448201526a206e6f742061637469766560a81b60648201526084016106ec565b61094a3383611817565b604080516001600160a01b0385166020820152908101839052610980908590606001604051602081830303815290604052611946565b5050505050565b60003361066b81858561099a83836110a4565b6109a49190611f1d565b61118e565b6109b33382611817565b50565b6008546001600160a01b031633146109e05760405162461bcd60e51b81526004016106ec90611e7d565b600880546001600160a01b0319166001600160a01b0383169081179091556040805133815260208101929092527fe1a25f463c6504824e91268b5b2c05658d5358c9c1698a85346cfae5336a642e91015b60405180910390a150565b600554859087906001600160a01b03163314610a6a5760405162461bcd60e51b81526004016106ec90611e7d565b6000818152600760205260409020546001600160a01b03838116911614610aa35760405162461bcd60e51b81526004016106ec90611e7d565b600080610ab285870187611b52565b91509150610ac082826112b3565b5050505050505050505050565b610ad8823383611372565b6106ff8282611817565b600760205260009081526040902080546001820180546001600160a01b039092169291610b0e90611e43565b80601f0160208091040260200160405190810160405280929190818152602001828054610b3a90611e43565b8015610b875780601f10610b5c57610100808354040283529160200191610b87565b820191906000526020600020905b815481529060010190602001808311610b6a57829003601f168201915b5050506002909301549192505061ffff81169060ff620100009091041684565b6060600480546105da90611e43565b60003381610bc482866110a4565b905083811015610c245760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106ec565b61071c828686840361118e565b60003361066b8185856113ec565b6008546001600160a01b03163314610c695760405162461bcd60e51b81526004016106ec90611e7d565b6001600160a01b038216610caa57604051339082156108fc029083906000818181858888f19350505050158015610ca4573d6000803e3d6000fd5b50610d1d565b60405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0383169063a9059cbb906044016020604051808303816000875af1158015610cf7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1b9190611f30565b505b604080513381526001600160a01b03841660208201529081018290527f16a1412f01b73c390eb2548427101644aa86c1443c272f73df00fb74c48fe4999060600160405180910390a15050565b6008546001600160a01b03163314610d945760405162461bcd60e51b81526004016106ec90611e7d565b60055460405163b479a96160e01b8152600481018390526001600160a01b039091169063b479a96190602401600060405180830381600087803b158015610dda57600080fd5b505af1158015610dee573d6000803e3d6000fd5b505060408051338152602081018590527f7b6bdf5a54b984bdb41e777eb126123085d57633ab56d408d9a1d39dd894e7bb9350019050610a31565b6008546001600160a01b03163314610e535760405162461bcd60e51b81526004016106ec90611e7d565b8460005b818110156108b257838382818110610e7157610e71611eb4565b9050602002016020810190610e869190611eca565b600760008a8a85818110610e9c57610e9c611eb4565b90506020020135815260200190815260200160002060020160006101000a81548161ffff021916908361ffff160217905550858582818110610ee057610ee0611eb4565b9050602002810190610ef29190611f52565b600760008b8b86818110610f0857610f08611eb4565b9050602002013581526020019081526020016000206001019182610f2d929190611ffd565b506001600760008a8a85818110610f4657610f46611eb4565b90506020020135815260200190815260200160002060020160026101000a81548160ff0219169083151502179055506001600760008a8a85818110610f8d57610f8d611eb4565b90506020020135815260200190815260200160002060000160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508080610fd490611f04565b915050610e57565b6008546001600160a01b031633146110065760405162461bcd60e51b81526004016106ec90611e7d565b60055460405163630429fb60e11b81526001600160a01b0383811660048301529091169063c60853f690602401600060405180830381600087803b15801561104d57600080fd5b505af1158015611061573d6000803e3d6000fd5b5050604080513381526001600160a01b03851660208201527f3785abad972484d82ebc033d8eb190737cd209b24e7f853dd622e415c3f537a29350019050610a31565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6008546001600160a01b031633146110f95760405162461bcd60e51b81526004016106ec90611e7d565b60055460405163e47ad74d60e01b8152600481018390526001600160a01b039091169063e47ad74d90602401600060405180830381600087803b15801561113f57600080fd5b505af1158015611153573d6000803e3d6000fd5b505060408051338152602081018590527f83f76efc0c025b2e3779f7bcead5a89ddaf05dc7829157cdab021a8591e7a6f99350019050610a31565b6001600160a01b0383166111f05760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106ec565b6001600160a01b0382166112515760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106ec565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0382166113095760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106ec565b806002600082825461131b9190611f1d565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600061137e84846110a4565b905060001981146113e657818110156113d95760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106ec565b6113e6848484840361118e565b50505050565b6001600160a01b0383166114505760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106ec565b6001600160a01b0382166114b25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106ec565b6001600160a01b0383166000908152602081905260409020548181101561152a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106ec565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36113e6565b600580546001600160a01b0319166001600160a01b0383169081179091556040805163647846a560e01b8152905163647846a5916004808201926020929091908290030181865afa1580156115e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061160d91906120bd565b600680546001600160a01b0319166001600160a01b03929092169182179055156116ad5760065460055460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015611687573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ab9190611f30565b505b60055460408051633fc8cef360e01b815290516000926001600160a01b031691633fc8cef39160048083019260209291908290030181865afa1580156116f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171b91906120bd565b6001600160a01b0316146109b357600560009054906101000a90046001600160a01b03166001600160a01b0316633fc8cef36040518163ffffffff1660e01b8152600401602060405180830381865afa15801561177c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117a091906120bd565b60055460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af11580156117f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ff9190611f30565b6001600160a01b0382166118775760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016106ec565b6001600160a01b038216600090815260208190526040902054818110156118eb5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016106ec565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016112a6565b505050565b600082815260076020908152604080832081516080810190925280546001600160a01b0316825260018101805485948401919061198290611e43565b80601f01602080910402602001604051908101604052809291908181526020018280546119ae90611e43565b80156119fb5780601f106119d0576101008083540402835291602001916119fb565b820191906000526020600020905b8154815290600101906020018083116119de57829003601f168201915b50505091835250506002919091015461ffff8116602083015262010000900460ff161515604090910152606081015190915015611a5b57828160200151604051602001611a499291906120da565b60405160208183030381529060405292505b60055481516040808401519051633f6b724360e21b81526001600160a01b039093169263fdadc90c92611a9992909189918991600090600401612108565b6020604051808303816000875af1158015611ab8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611adc919061214c565b949350505050565b6000815180845260005b81811015611b0a57602081850181015186830182015201611aee565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006107336020830184611ae4565b6001600160a01b03811681146109b357600080fd5b60008060408385031215611b6557600080fd5b8235611b7081611b3d565b946020939093013593505050565b600080600060608486031215611b9357600080fd5b8335611b9e81611b3d565b92506020840135611bae81611b3d565b929592945050506040919091013590565b60008083601f840112611bd157600080fd5b50813567ffffffffffffffff811115611be957600080fd5b6020830191508360208260051b8501011115611c0457600080fd5b9250929050565b60008060008060008060006080888a031215611c2657600080fd5b8735611c3181611b3d565b9650602088013567ffffffffffffffff80821115611c4e57600080fd5b611c5a8b838c01611bbf565b909850965060408a0135915080821115611c7357600080fd5b611c7f8b838c01611bbf565b909650945060608a0135915080821115611c9857600080fd5b50611ca58a828b01611bbf565b989b979a50959850939692959293505050565b600080600060608486031215611ccd57600080fd5b833592506020840135611bae81611b3d565b600060208284031215611cf157600080fd5b5035919050565b600060208284031215611d0a57600080fd5b813561073381611b3d565b600080600080600080600060c0888a031215611d3057600080fd5b87359650602088013595506040880135611d4981611b3d565b94506060880135611d5981611b3d565b93506080880135925060a088013567ffffffffffffffff80821115611d7d57600080fd5b818a0191508a601f830112611d9157600080fd5b813581811115611da057600080fd5b8b6020828501011115611db257600080fd5b60208301945080935050505092959891949750929550565b6001600160a01b0385168152608060208201819052600090611dee90830186611ae4565b61ffff9490941660408301525090151560609091015292915050565b60008060408385031215611e1d57600080fd5b8235611e2881611b3d565b91506020830135611e3881611b3d565b809150509250929050565b600181811c90821680611e5757607f821691505b602082108103611e7757634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252601d908201527f4d657373616765436c69656e743a206e6f7420617574686f72697a6564000000604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611edc57600080fd5b813561ffff8116811461073357600080fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611f1657611f16611eee565b5060010190565b8082018082111561067157610671611eee565b600060208284031215611f4257600080fd5b8151801515811461073357600080fd5b6000808335601e19843603018112611f6957600080fd5b83018035915067ffffffffffffffff821115611f8457600080fd5b602001915036819003821315611c0457600080fd5b634e487b7160e01b600052604160045260246000fd5b601f82111561194157600081815260208120601f850160051c81016020861015611fd65750805b601f850160051c820191505b81811015611ff557828155600101611fe2565b505050505050565b67ffffffffffffffff83111561201557612015611f99565b612029836120238354611e43565b83611faf565b6000601f84116001811461205d57600085156120455750838201355b600019600387901b1c1916600186901b178355610980565b600083815260209020601f19861690835b8281101561208e578685013582556020948501946001909201910161206e565b50868210156120ab5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b6000602082840312156120cf57600080fd5b815161073381611b3d565b6040815260006120ed6040830185611ae4565b82810360208401526120ff8185611ae4565b95945050505050565b60018060a01b038616815284602082015260a06040820152600061212f60a0830186611ae4565b61ffff949094166060830152509015156080909101529392505050565b60006020828403121561215e57600080fd5b505191905056fea2646970667358221220393692e283cf4d9870f5d98e5cef28e47c094816f703c1b75b74792227252a3a64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
      },
      "burnFrom(address,uint256)": {
        "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "configureClientExtended(address,uint256[],bytes[],uint16[])": {
        "notice": "OWNER "
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 924,
        "contract": "contracts/NexisBridge.sol:NexisBridge",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 930,
        "contract": "contracts/NexisBridge.sol:NexisBridge",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 932,
        "contract": "contracts/NexisBridge.sol:NexisBridge",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 934,
        "contract": "contracts/NexisBridge.sol:NexisBridge",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 936,
        "contract": "contracts/NexisBridge.sol:NexisBridge",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 287,
        "contract": "contracts/NexisBridge.sol:NexisBridge",
        "label": "MESSAGEv3",
        "offset": 0,
        "slot": "5",
        "type": "t_contract(IMessageV3)279"
      },
      {
        "astId": 290,
        "contract": "contracts/NexisBridge.sol:NexisBridge",
        "label": "FEE_TOKEN",
        "offset": 0,
        "slot": "6",
        "type": "t_contract(IERC20cl)83"
      },
      {
        "astId": 304,
        "contract": "contracts/NexisBridge.sol:NexisBridge",
        "label": "CHAINS",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_struct(ChainData)299_storage)"
      },
      {
        "astId": 306,
        "contract": "contracts/NexisBridge.sol:NexisBridge",
        "label": "MESSAGE_OWNER",
        "offset": 0,
        "slot": "8",
        "type": "t_address"
      },
      {
        "astId": 1682,
        "contract": "contracts/NexisBridge.sol:NexisBridge",
        "label": "owner",
        "offset": 0,
        "slot": "9",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(IERC20cl)83": {
        "encoding": "inplace",
        "label": "contract IERC20cl",
        "numberOfBytes": "20"
      },
      "t_contract(IMessageV3)279": {
        "encoding": "inplace",
        "label": "contract IMessageV3",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(ChainData)299_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct MessageClient.ChainData)",
        "numberOfBytes": "32",
        "value": "t_struct(ChainData)299_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(ChainData)299_storage": {
        "encoding": "inplace",
        "label": "struct MessageClient.ChainData",
        "members": [
          {
            "astId": 292,
            "contract": "contracts/NexisBridge.sol:NexisBridge",
            "label": "endpoint",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 294,
            "contract": "contracts/NexisBridge.sol:NexisBridge",
            "label": "endpointExtended",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes_storage"
          },
          {
            "astId": 296,
            "contract": "contracts/NexisBridge.sol:NexisBridge",
            "label": "confirmations",
            "offset": 0,
            "slot": "2",
            "type": "t_uint16"
          },
          {
            "astId": 298,
            "contract": "contracts/NexisBridge.sol:NexisBridge",
            "label": "extended",
            "offset": 2,
            "slot": "2",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint16": {
        "encoding": "inplace",
        "label": "uint16",
        "numberOfBytes": "2"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}